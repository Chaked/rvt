Loop_infiniteLoop_while1.rv.c
Adding CPROVER library

initing this guy ("symbol" "type" ("pointer" "subtype" ("signedbv" "width" ("32") "#c_type" ("signed_int")) "#location" ("" "file" ("Loop_infiniteLoop_while1.rv.c") "line" ("46") "function" (""))) "identifier" ("unitrv::rvp_x$argument_input"))

initing this guy ("symbol" "type" ("pointer" "subtype" ("signedbv" "width" ("32") "#c_type" ("signed_int")) "#location" ("" "file" ("Loop_infiniteLoop_while1.rv.c") "line" ("46") "function" (""))) "identifier" ("unitrv::rvp_y$argument_input"))

initing this guy ("symbol" "type" ("pointer" "subtype" ("signedbv" "width" ("32") "#c_type" ("signed_int")) "#location" ("" "file" ("Loop_infiniteLoop_while1.rv.c") "line" ("46") "function" (""))) "identifier" ("unitrv::rvp_rvretval$argument_input"))
First symex 1
First symex 2
Modified: unitrv::$return_value

initing this guy ("symbol" "type" ("pointer" "subtype" ("signedbv" "width" ("32") "#c_type" ("signed_int")) "#location" ("" "file" ("Loop_infiniteLoop_while1.rv.c") "line" ("46") "function" (""))) "identifier" ("unitrv::rvp_x$argument_input"))

initing this guy ("symbol" "type" ("pointer" "subtype" ("signedbv" "width" ("32") "#c_type" ("signed_int")) "#location" ("" "file" ("Loop_infiniteLoop_while1.rv.c") "line" ("46") "function" (""))) "identifier" ("unitrv::rvp_y$argument_input"))

initing this guy ("symbol" "type" ("pointer" "subtype" ("signedbv" "width" ("32") "#c_type" ("signed_int")) "#location" ("" "file" ("Loop_infiniteLoop_while1.rv.c") "line" ("46") "function" (""))) "identifier" ("unitrv::rvp_rvretval$argument_input"))
Global input: c::__CPROVER_malloc_size
Global input: c::__CPROVER_malloc_object
Global input: c::__CPROVER_dead_object
Global input: c::__CPROVER_deallocated
Harness:
        // 0 file from pointer to array
        rvp_x$argument_input = myarray3;
        // 1 file from pointer to array
        rvp_y$argument_input = myarray4;
        // 2 file from pointer to array
        rvp_rvretval$argument_input = myarray5;
        // 3 no location
        $return_value=chk0_Loop_infiniteLoop_while1(rvp_x$argument_input, rvp_y$argument_input, rvp_rvretval$argument_input);
        // 4 file harness-save-outputs
        $return_value$f1_output = $return_value;
        // 5 no location
        $return_value=chk1_Loop_infiniteLoop_while1(rvp_x$argument_input, rvp_y$argument_input, rvp_rvretval$argument_input);
        // 6 file harness-assertions
        ASSERT $return_value$f1_output == $return_value
        // 7 no location
        END_FUNCTION
Symex on harness

Thread 0 file from pointer to array
ASSIGNMENT (STATE)
rvp_x$argument_input!0#1 == myarray3
Guard: TRUE
--------------
Thread 0 file from pointer to array
ASSIGNMENT (STATE)
rvp_y$argument_input!0#1 == myarray4
Guard: TRUE
--------------
Thread 0 file from pointer to array
ASSIGNMENT (STATE)
rvp_rvretval$argument_input!0#1 == myarray5
Guard: TRUE
--------------
Thread 0
LOCATION
Guard: TRUE
--------------
Thread 0
FUNCTION_CALL
Guard: TRUE
--------------
Thread 0
ASSIGNMENT (STATE)
rvp_x!0@1#1 == myarray3
Guard: TRUE
--------------
Thread 0
ASSIGNMENT (STATE)
rvp_y!0@1#1 == myarray4
Guard: TRUE
--------------
Thread 0
ASSIGNMENT (STATE)
rvp_rvretval!0@1#1 == myarray5
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
DECL
tmp_if_expr$1!0@1#1
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSUME
!(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSUME
!(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSUME
!(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSUME
!(4 * INFINITY() < 4)
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
LOCATION
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (GUARD)
\guard#1 == myarray3#0[0] > 0
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSUME
\guard#1 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: \guard#1
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSUME
\guard#1 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: \guard#1
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSUME
\guard#1 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: \guard#1
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSUME
\guard#1 ==> !(4 * INFINITY() < 4)
Guard: \guard#1
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
tmp_if_expr$1!0@1#2 == myarray4#0[0] > 0
Guard: \guard#1
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
LOCATION
Guard: \guard#1
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
tmp_if_expr$1!0@1#4 == FALSE
Guard: !\guard#1
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
tmp_if_expr$1!0@1#5 == (tmp_if_expr$1!0@1#2 && \guard#1)
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 51 function chk0_Loop_infiniteLoop_while1
LOCATION
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 53 function chk0_Loop_infiniteLoop_while1
LOCATION
Guard: !tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 53 function chk0_Loop_infiniteLoop_while1
SHARED WRITE
$return_value#1
Guard: !tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 53 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
$return_value#1 == 0
Guard: !tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 57 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
$return_value#2 == $return_value#0
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 57 function chk0_Loop_infiniteLoop_while1
LOCATION
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 57 function chk0_Loop_infiniteLoop_while1
FUNCTION_CALL
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 57 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
pX!0@1#1 == myarray3
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 57 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
pY!0@1#1 == myarray4
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 32 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 ==> !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 32 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 ==> !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 32 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 32 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 32 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 32 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 32 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 32 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 32 function rvs0_body
LOCATION
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 34 function rvs0_body
ASSIGNMENT (GUARD)
\guard#2 == !(myarray4#0[0] >= myarray3#0[0])
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 34 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !overflow("-", int, myarray3#0[0], 1)
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 34 function rvs0_body
SHARED WRITE
myarray3#1
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 34 function rvs0_body
ASSIGNMENT (STATE)
myarray3#1 == myarray3#0 WITH [0:=-1 + myarray3#0[0]]
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 34 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 34 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 34 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 34 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 35 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 35 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 35 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 35 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 35 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !overflow("+", int, myarray4#0[0], 1)
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 35 function rvs0_body
SHARED WRITE
myarray4#1
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 35 function rvs0_body
ASSIGNMENT (STATE)
myarray4#1 == myarray4#0 WITH [0:=1 + myarray4#0[0]]
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 35 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 35 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 35 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 35 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && \guard#2 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 35 function rvs0_body
LOCATION
Guard: tmp_if_expr$1!0@1#5 && \guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
ASSIGNMENT (PHI)
myarray3#2 == myarray3#0
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
ASSIGNMENT (PHI)
myarray4#2 == myarray4#0
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !overflow("+", int, myarray3#2[0], 1)
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
SHARED WRITE
myarray3#3
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
ASSIGNMENT (STATE)
myarray3#3 == myarray3#2 WITH [0:=1 + myarray3#2[0]]
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 40 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 41 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 41 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 41 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 41 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 41 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !overflow("-", int, myarray4#2[0], 1)
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 41 function rvs0_body
SHARED WRITE
myarray4#3
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 41 function rvs0_body
ASSIGNMENT (STATE)
myarray4#3 == myarray4#2 WITH [0:=-1 + myarray4#2[0]]
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 41 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 41 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 41 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 41 function rvs0_body
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#2 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5 && !\guard#2
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 44 function rvs0_body
ASSIGNMENT (PHI)
myarray3#4 == (\guard#2 ? myarray3#1 : myarray3#3)
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 44 function rvs0_body
ASSIGNMENT (PHI)
myarray4#4 == (\guard#2 ? myarray4#1 : myarray4#3)
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 44 function rvs0_body
FUNCTION_RETURN
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 60 function chk0_Loop_infiniteLoop_while1
LOCATION
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 60 function chk0_Loop_infiniteLoop_while1
SHARED WRITE
$return_value#3
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 60 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
$return_value#3 == 0
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 61 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
$return_value#4 == 0
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 61 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
myarray3#5 == (!tmp_if_expr$1!0@1#5 ? myarray3#0 : myarray3#4)
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 61 function chk0_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
myarray4#5 == (!tmp_if_expr$1!0@1#5 ? myarray4#0 : myarray4#4)
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 61 function chk0_Loop_infiniteLoop_while1
FUNCTION_RETURN
Guard: TRUE
--------------
Thread 0 file harness-save-outputs
SHARED WRITE
$return_value$f1_output#1
Guard: TRUE
--------------
Thread 0 file harness-save-outputs
ASSIGNMENT (STATE)
$return_value$f1_output#1 == 0
Guard: TRUE
--------------
Thread 0
LOCATION
Guard: TRUE
--------------
Thread 0
FUNCTION_CALL
Guard: TRUE
--------------
Thread 0
ASSIGNMENT (STATE)
rvp_x!0@1#1 == myarray3
Guard: TRUE
--------------
Thread 0
ASSIGNMENT (STATE)
rvp_y!0@1#1 == myarray4
Guard: TRUE
--------------
Thread 0
ASSIGNMENT (STATE)
rvp_rvretval!0@1#1 == myarray5
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
DECL
tmp_if_expr$1!0@1#1
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSUME
!(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSUME
!(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSUME
!(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSUME
!(4 * INFINITY() < 4)
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
LOCATION
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (GUARD)
\guard#3 == myarray3#5[0] > 0
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSUME
\guard#3 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: \guard#3
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSUME
\guard#3 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: \guard#3
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSUME
\guard#3 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: \guard#3
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSUME
\guard#3 ==> !(4 * INFINITY() < 4)
Guard: \guard#3
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
tmp_if_expr$1!0@1#2 == myarray4#5[0] > 0
Guard: \guard#3
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
LOCATION
Guard: \guard#3
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
tmp_if_expr$1!0@1#3 == tmp_if_expr$1!0@1#1
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
tmp_if_expr$1!0@1#4 == FALSE
Guard: !\guard#3
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
tmp_if_expr$1!0@1#5 == (tmp_if_expr$1!0@1#2 && \guard#3)
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 70 function chk1_Loop_infiniteLoop_while1
LOCATION
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 72 function chk1_Loop_infiniteLoop_while1
LOCATION
Guard: !tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 72 function chk1_Loop_infiniteLoop_while1
SHARED WRITE
$return_value#5
Guard: !tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 72 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
$return_value#5 == 0
Guard: !tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 76 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
$return_value#6 == 0
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 76 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 76 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 76 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 76 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 76 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 ==> !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 76 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 ==> !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 76 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 76 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 76 function chk1_Loop_infiniteLoop_while1
LOCATION
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 78 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (GUARD)
\guard#4 == !(myarray4#5[0] >= myarray3#5[0])
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 78 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && \guard#4 ==> !overflow("-", int, myarray3#5[0], 1)
Guard: tmp_if_expr$1!0@1#5 && \guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 78 function chk1_Loop_infiniteLoop_while1
SHARED WRITE
myarray3#6
Guard: tmp_if_expr$1!0@1#5 && \guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 78 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
myarray3#6 == myarray3#5 WITH [0:=-1 + myarray3#5[0]]
Guard: tmp_if_expr$1!0@1#5 && \guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 79 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && \guard#4 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5 && \guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 79 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && \guard#4 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5 && \guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 79 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && \guard#4 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5 && \guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 79 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && \guard#4 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5 && \guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 79 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && \guard#4 ==> !overflow("+", int, 1, myarray4#5[0])
Guard: tmp_if_expr$1!0@1#5 && \guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 79 function chk1_Loop_infiniteLoop_while1
SHARED WRITE
myarray4#6
Guard: tmp_if_expr$1!0@1#5 && \guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 79 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
myarray4#6 == myarray4#5 WITH [0:=1 + myarray4#5[0]]
Guard: tmp_if_expr$1!0@1#5 && \guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 79 function chk1_Loop_infiniteLoop_while1
LOCATION
Guard: tmp_if_expr$1!0@1#5 && \guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 84 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
myarray3#7 == myarray3#5
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 84 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
myarray4#7 == myarray4#5
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 84 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#4 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 84 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#4 ==> !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 84 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#4 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray4) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 84 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#4 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 84 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#4 ==> !overflow("-", int, myarray4#7[0], 1)
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 84 function chk1_Loop_infiniteLoop_while1
SHARED WRITE
myarray4#8
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 84 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
myarray4#8 == myarray4#7 WITH [0:=-1 + myarray4#7[0]]
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 85 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#4 ==> !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_deallocated#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 85 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#4 ==> !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_dead_object#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 85 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#4 ==> !(__CPROVER_malloc_size#0 < 4) || !(POINTER_OBJECT(&myarray3) == POINTER_OBJECT(__CPROVER_malloc_object#0))
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 85 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#4 ==> !(4 * INFINITY() < 4)
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 85 function chk1_Loop_infiniteLoop_while1
ASSUME
tmp_if_expr$1!0@1#5 && !\guard#4 ==> !(~myarray3#7[0] == -2147483648)
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 85 function chk1_Loop_infiniteLoop_while1
SHARED WRITE
myarray3#8
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 85 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
myarray3#8 == myarray3#7 WITH [0:=-(~myarray3#7[0])]
Guard: tmp_if_expr$1!0@1#5 && !\guard#4
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 90 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
myarray3#9 == (\guard#4 ? myarray3#6 : myarray3#8)
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 90 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
myarray4#9 == (\guard#4 ? myarray4#6 : myarray4#8)
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 90 function chk1_Loop_infiniteLoop_while1
LOCATION
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 90 function chk1_Loop_infiniteLoop_while1
SHARED WRITE
$return_value#7
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 90 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (STATE)
$return_value#7 == 0
Guard: tmp_if_expr$1!0@1#5
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 91 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
$return_value#8 == 0
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 91 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
myarray3#10 == (!tmp_if_expr$1!0@1#5 ? myarray3#5 : myarray3#9)
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 91 function chk1_Loop_infiniteLoop_while1
ASSIGNMENT (PHI)
myarray4#10 == (!tmp_if_expr$1!0@1#5 ? myarray4#5 : myarray4#9)
Guard: TRUE
--------------
Thread 0 file Loop_infiniteLoop_while1.rv.c line 91 function chk1_Loop_infiniteLoop_while1
FUNCTION_RETURN
Guard: TRUE
--------------
Thread 0
FUNCTION_RETURN
Guard: TRUE
--------------

PROGRAMS ARE EQUIVALENT
