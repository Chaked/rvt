<?xml version="1.0" encoding="UTF-8"?>
<cprover>
<program>Summarizer 5.0</program>
<message type="STATUS-MESSAGE">
  <text>SUMMARIZER version 0.1.0 (based on CBMC 5.0)</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Parsing .\try1_side1.c.rec.c</text>
</message>

<message type="WARNING">
  <text>try1_side1.c.rec.c</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Converting</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Type-checking try1_side1.c.rec</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Generating GOTO Program</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Adding CPROVER library</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Generic Property Instrumentation</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Function Pointer Removal</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Context-sensitive analysis from _start</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Using intervals domain with binary search solver</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing SSA of main</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Simplifying</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing SSA of _start</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Simplifying</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing SSA of __CPROVER_initialize</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Simplifying</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing SSA of ident</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Simplifying</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing SSA of sum</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Simplifying</text>
</message>

<message type="STATUS-MESSAGE">
  <text>
Summarizing function _start</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Checking precondition of __CPROVER_initialize</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Function __CPROVER_initialize not analyzed yet</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing calling context for function __CPROVER_initialize</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Recursively summarizing function __CPROVER_initialize</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Analyzing function __CPROVER_initialize</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing summary</text>
</message>

<message type="STATUS-MESSAGE">
  <text>
Summary for function __CPROVER_initialize
params: 
globals_in: __CPROVER_threads_exited __CPROVER_malloc_is_new_array __CPROVER_dead_object __CPROVER_deallocated __CPROVER_malloc_object __CPROVER_memory_leak __CPROVER_rounding_mode n __CPROVER_malloc_size __CPROVER_next_thread_id __CPROVER_pipe_count __CPROVER_thread_id 
globals_out: __CPROVER_threads_exited#18 __CPROVER_malloc_is_new_array#15 __CPROVER_dead_object#11 __CPROVER_deallocated#13 __CPROVER_malloc_object#20 __CPROVER_memory_leak#16 __CPROVER_rounding_mode#12 n#22 __CPROVER_malloc_size#14 __CPROVER_next_thread_id#19 __CPROVER_pipe_count#21 __CPROVER_thread_id#17 
forward precondition: TRUE
forward transformer: __CPROVER_rounding_mode#12 &lt;= 0 &amp;&amp; -((signed __CPROVER_bitvector[33])__CPROVER_rounding_mode#12) &lt;= 0 &amp;&amp; n#22 &lt;= 0 &amp;&amp; -((signed __CPROVER_bitvector[33])n#22) &lt;= 0 &amp;&amp; __CPROVER_malloc_size#14 &lt;= 0u &amp;&amp; -((signed __CPROVER_bitvector[33])__CPROVER_malloc_size#14) &lt;= 0 &amp;&amp; __CPROVER_next_thread_id#19 &lt;= 0ul &amp;&amp; -((signed __CPROVER_bitvector[33])__CPROVER_next_thread_id#19) &lt;= 0 &amp;&amp; __CPROVER_pipe_count#21 &lt;= 0u &amp;&amp; -((signed __CPROVER_bitvector[33])__CPROVER_pipe_count#21) &lt;= 0 &amp;&amp; __CPROVER_thread_id#17 &lt;= 0ul &amp;&amp; -((signed __CPROVER_bitvector[33])__CPROVER_thread_id#17) &lt;= 0
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Checking precondition of main</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Function main not analyzed yet</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing calling context for function main</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Recursively summarizing function main</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Checking precondition of sum</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Function sum not analyzed yet</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing calling context for function sum</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Recursively summarizing function sum</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Checking precondition of ident</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Function ident not analyzed yet</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing calling context for function ident</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Recursively summarizing function ident</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Analyzing function ident</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing summary</text>
</message>

<message type="STATUS-MESSAGE">
  <text>
Summary for function ident
params: n 
globals_in: 
globals_out: ident#return_value#24 
forward precondition: n &lt;= 2147483647 &amp;&amp; -((signed __CPROVER_bitvector[33])n) &lt;= 2147483648
forward transformer: n &lt;= 2147483647 &amp;&amp; -((signed __CPROVER_bitvector[33])n) &lt;= 2147483648 ==&gt; ident#return_value#24 &lt;= 2147483647 &amp;&amp; -((signed __CPROVER_bitvector[33])ident#return_value#24) &lt;= 2147483648
forward invariant: n &lt;= 2147483647 &amp;&amp; -((signed __CPROVER_bitvector[33])n) &lt;= 2147483648 ==&gt; TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Checking precondition of sum</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Havoc recursive function call to sum</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Analyzing function sum</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing summary</text>
</message>

<message type="STATUS-MESSAGE">
  <text>
Summary for function sum
params: n 
globals_in: 
globals_out: sum#return_value#phi41 
forward precondition: n &lt;= 2147483647 &amp;&amp; -((signed __CPROVER_bitvector[33])n) &lt;= 2147483648
forward transformer: n &lt;= 2147483647 &amp;&amp; -((signed __CPROVER_bitvector[33])n) &lt;= 2147483648 ==&gt; sum#return_value#phi41 &lt;= 2147483647 &amp;&amp; -((signed __CPROVER_bitvector[33])sum#return_value#phi41) &lt;= 2147483648
forward invariant: n &lt;= 2147483647 &amp;&amp; -((signed __CPROVER_bitvector[33])n) &lt;= 2147483648 ==&gt; TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Analyzing function main</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing summary</text>
</message>

<message type="STATUS-MESSAGE">
  <text>
Summary for function main
params: 
globals_in: n 
globals_out: main#return_value#3 n#1 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Analyzing function _start</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Computing summary</text>
</message>

<message type="STATUS-MESSAGE">
  <text>
Summary for function _start
params: 
globals_in: 
globals_out: 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Checking properties of main</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Checking properties of _start</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Checking properties of __CPROVER_initialize</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Checking properties of ident</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Checking properties of sum</text>
</message>

<message type="STATUS-MESSAGE">
  <text>** statistics: </text>
</message>

<message type="STATUS-MESSAGE">
  <text>  number of solver instances: 5</text>
</message>

<message type="STATUS-MESSAGE">
  <text>  number of solver calls: 94</text>
</message>

<message type="STATUS-MESSAGE">
  <text>  number of summaries used: 4</text>
</message>

<message type="STATUS-MESSAGE">
  <text/>
</message>

<message type="STATUS-MESSAGE">
  <text/>
</message>

<message type="STATUS-MESSAGE">
  <text>** 0 of 0 unknown</text>
</message>

<message type="STATUS-MESSAGE">
  <text>** 0 of 0 failed</text>
</message>

<message type="STATUS-MESSAGE">
  <text>VERIFICATION SUCCESSFUL</text>
</message>

<cprover-status>SUCCESS</cprover-status>

</cprover>
